<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woolution.shop.mapper.ServiceMgtMapper">
    <!--info-->
    <!--임시로 admin_id 1로 고정-->
    <insert id="infoInsert">
        insert into service (service_category_id, service_nm, service_desc, service_price, service_tet, service_state,
                             service_createAT,
                             admin_id)
        VALUES (#{service_category_id}, #{service_nm}, #{service_desc}, #{service_price}, #{service_tet}, true,
                now(), 1)
    </insert>

    <select id="infoList" resultType="hashmap">
        select id,
               service_desc,
               service_nm,
               service_price,
               service_tet,
               service_state,
               date_format(service_createAT, '%Y-%m-%d')         as service_createAT,
               admin_id,
               service_category_id,
               (select service_category_name
                from service_category
                where service_category_id = service_category.id) as service_category_name
        from service
        where service_state = true
    </select>

    <update id="infoMod">
        update service
        set service_desc        = #{service_desc},
            service_nm          = #{service_nm},
            service_price       = #{service_price},
            service_tet         = #{service_tet},
            service_category_id = #{service_category_id}
        where id = #{id}
    </update>

    <update id="infoDel">
        update service
        set service_state = false
        where id = #{id}
    </update>

    <select id="infoCategory" resultType="hashmap">
        select id, service_category_name
        from service_category;
    </select>

    <insert id="infoCategoryAdd">
        insert into service_category(service_category_name, service_category_createAT)
        values (#{service_category_name}, now())
    </insert>

    <select id="infoOne" resultType="hashmap">
        select id,
               service_desc,
               service_nm,
               service_price,
               service_tet,
               service_state,
               date_format(service_createAT, '%Y-%m-%d')         as service_createAT,
               admin_id,
               service_category_id,
               (select service_category_name
                from service_category
                where service_category_id = service_category.id) as service_category_name
        from service
        where service_state = true
          and id = #{id}
    </select>
    <!--end info-->

    <!--anal-->
    <select id="analServiceMonth" resultType="com.woolution.shop.model.ServiceMgtModel">
        select count(case when service_state = true then 1 end) as serviceCnt
        from service
        where service_createAT >= date_add(now(), interval - 2 year)
        group by extract(year_month from service_createAT)
    </select>

    <select id="analService" resultType="com.woolution.shop.model.ServiceMgtCategoryModel">
        select service_category_name, count(DISTINCT service.id) as serviceCategoryCtn
        from service_category,
             service,
             sales
        where service_state = true
          and service_category_id = service_category.id
          and sales_time >= date_add(now(), interval -1 year)
        group by service_category_id
    </select>

    <select id="analServiceCnt" resultType="hashmap">
        select service_category_name,
               service_nm,
               (count(service_id) * 100 / (select count(sales.id) from sales where sales_state = true)) as per,
               count(service_id)                                                                        as visitCnt
        from service,
             sales,
             service_category
        where service.id = service_id
          and service_category_id = service_category.id
          and sales_state = true
          and service_state = true
          and sales_time >= date_add(now(), interval -1 year)
        group by service_id
    </select>
    <!--end anal-->

    <!--book-->
    <insert id="bookInsert">
        insert into book (book_title, book_state, book_start, book_end, book_createAT, sales_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.book_title}, true, #{item.book_start}, #{item.book_end}, now(), 14)
        </foreach>
    </insert>

    <delete id="bookDel">
        truncate book
    </delete>

    <select id="bookList" resultType="com.woolution.shop.model.BookModel">
        select id, book_title, book_state, book_start, book_end, book_createAT, sales_id
        from book
    </select>
    <!--end book-->

    <select id="dashboardTable" resultType="com.woolution.shop.model.ServiceMgtModel">
        select service_nm,
               service_price,
               (select count(sales.id)
                from sales
                where sales_state = true
                  and service.id = service_id
                  and sales_time >= date_add(now(), interval -1 year)) as serviceCnt
        from service
        where service_state = true
        order by serviceCnt desc
        limit 5
    </select>
</mapper>